# Modular Caddyfile v1.0
import /app/configs/GlobalConfig
import /app/configs/ImportSnippets

# rubberverse.xyz
{$FQDN} {
    crowdsec
    import acme
    route /analytics* {
        redir https://analytics.rubberverse.xyz/share/D4ehQTUcSXGVmmb4/blog.rubberverse.xyz permanent
    }
    route /discord* {
        respond 418 "Not public yet, come back later!"
    }
    route {
        # Route Bluesky PDS requests properly
        reverse_proxy /.well-known/atproto-did* localhost:9003 {
            # Need to add host header otherwise it won't work
            header_up +Host {http.reverse_proxy.upstream.hostport}
        }
        reverse_proxy /xrpc* localhost:9003 {
            header_up +Host {http.reverse_proxy.upstream.hostport}
        }
        # Redirect anything else to main domain
        redir https://blog.rubberverse.xyz{uri} permanent
    }
}

# wwww.rubberverse.xyz -> blog.rubberverse.xyz
www.{$FQDN} {
    crowdsec
    import acme
    redir https://blog.rubberverse.xyz{uri} permanent
}

# blog.rubberverse.xyz
blog.{$FQDN} {
    crowdsec
    import acme
    import headers
    import compress /patreon/*
    import /app/configs/Coraza
    route {
        import umami https://analytics.rubberverse.xyz/api/send {$UMAMI_BLOG_WEBID} 
        root * /app/www/html
        file_server
    }
    log {
        output file /app/logs/blog.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# Umami analytics
analytics.{$FQDN} {
    crowdsec
    import acme
    import headers
    import compress /websites/* /reports/* /settings/* /profile/* /share/*
    import websockets localhost:3000
    import /app/configs/Coraza
    route {
        import failed_login umami /login localhost:3000
    }
    log {
        output file /app/logs/analytics.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# Readeck instance
read.{$FQDN} {
    crowdsec
    import acme
    import compress /bookmarks/unread /bookmarks/labels /bookmarks/highlights /bookmarks/collections /profile* /admin*
    # Websockets first, Coraza last
    import websockets localhost:50000
    import /app/configs/Coraza
    route {
        import failed_login readeck /login localhost:50000
    }
    log {
        output file /app/logs/readeck.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# ArTalk comments
comments.{$FQDN} {
    crowdsec
    import acme
    import compress
    # Custom CSP header and COOP, CORP
    reverse_proxy localhost:9006 {
        header_up Content-Security-Policy "frame-ancestors 'self' data: https://*.rubberverse.xyz https://challenges.cloudflare.com; frame-src 'self' https://comments.rubberverse.xyz https://challenges.cloudflare.com; script-src 'self' https://comments.rubberverse.xyz https://analytics.rubberverse.xyz https://challenges.cloudflare.com https://cdn.jsdelivr.net"
        header_up Cross-Origin-Opener-Policy "same-origin-allow-popups"
        header_up Cross-Origin-Resource-Policy "cross-origin"
    }
    log {
        output file /app/logs/comments.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# Sharkey instace
social.{$FQDN} {
    crowdsec
    import acme
    import websockets localhost:3001
    route {
        import umami https://analytics.rubberverse.xyz/api/send {$UMAMI_FEDIVERSE_WEBID}
        # Need to do a lot of things manually for Sharkey as it sets some headers by itself and makes extensive use of websockets
        # Coraza WAF can't be used with NextJS projects yet (due to it buffering streamed responses, rewrite is coming soon)
        handle {
            reverse_proxy localhost:3001
            @sharkeyCache {
                path *.ico *.svg *.gif *.jpg *.jpeg *.webp *.avif *.woff *.woff2 *.png 
            }
            # Caching for files
            header @sharkeyCache Cache-Control "public, max-age=31536000, immutable" {
                defer
            }
            # Host Header, needed for proper reverse proxy functionality
            header Host {http.reverse_proxy.upstream.hostport} {
                defer
            }
            # Client IP Header, we are deferring it and overwriting client's value. Ensures proper rate limiting.
            header X-Forwarded-For {client_ip} {
                defer
            }
            # HSTS Header, default one has max age of like few hours.
            header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" {
                defer
            }
            # X-* headers
            header X-Content-Type-Options "nosniff"
            header X-XSS-Protection "1; mode=block"
            # Header for crawlers
            header X-Robots-Tag "noimageindex; nofollow"
        }
    }
    log {
        output file /app/logs/social.log {
            mode 644
            roll_size 100M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}
