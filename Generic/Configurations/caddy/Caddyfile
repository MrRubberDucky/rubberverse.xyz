# Modular Caddyfile v1.1
import /app/configs/GlobalConfig
import /app/configs/ImportSnippets

# rubberverse.xyz
{$FQDN} {
    import acme
    route /analytics {
        # Any request on rubberverse.xyz/analytics gets redirected to public analytics page for blog.rubberverse.xyz
        crowdsec
        redir https://analytics.rubberverse.xyz/share/D4ehQTUcSXGVmmb4/blog.rubberverse.xyz permanent
    }
    route /discord {
        crowdsec
        # This will redirect to the read-only Discord server soon
        respond 418 "Not public yet, come back later!"
    }
    # Bluesky PDS things
    route /.well-known/atproto-did* {
        crowdsec
        header >Access-Control-Allow-Origin https://bsky.app
        header >Cross-Origin-Resource-Policy cross-origin
        # > = defer
        # We are overwriting CORS header from wildcard to only allow ACAO from bsky.app
        # Prevents scraping that's not done directly from bsky.app/or from apps such as clearsky.net from showing list of blocked users, or querying posts
        # It may break some things but honestly I don't care.
        reverse_proxy /.well-known/atproto-did* localhost:9003 {
                # Defer Host header to correct value so it doesn't fail
                header_up >Host {http.reverse_proxy.upstream.hostport}
        }
    }
    route /xrpc* {
        crowdsec
        header >Access-Control-Allow-Origin https://bsky.app
        header >Cross-Origin-Resource-Policy cross-origin
        reverse_proxy /xrpc* localhost:9003 {
                header_up >Host {http.reverse_proxy.upstream.hostport}
        }
    }
    # Route everything else to blog
    route {
        crowdsec
        # Redirect anything else to main domain
        redir https://blog.rubberverse.xyz{uri} permanent
    }
}

# wwww.rubberverse.xyz -> blog.rubberverse.xyz
www.{$FQDN} {
    crowdsec
    import acme
    redir https://blog.rubberverse.xyz{uri} permanent
}

# blog.rubberverse.xyz
blog.{$FQDN} {
    import acme
    import headers
    # We don't want to cache patreon-exclusive posts because... reasons.
    # It's just to avoid issues with browsers caching content and then new stuff not showing up (been there)
    import compress /patreon*
    route {
        crowdsec
        appsec
        # See ImportSnippets for usage
        import umami https://analytics.rubberverse.xyz/api/send meow
        root * /app/www/html
        file_server
    }
    log {
        output file /app/logs/blog.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# Umami analytics
analytics.{$FQDN} {
    import acme
    import headers
    # We don't want to cache main dashboard statistics as it made for some peculiar issues
    import compress /websites* /reports* /settings* /profile*
    # Route /api endpoints seperately so appsec doesn't buffer them and make them fail
    route /api* {
        crowdsec
        import websockets localhost:3000
    }
    route {
        crowdsec
        appsec
        import failed_login umami /login localhost:3000
    }
    log {
        output file /app/logs/analytics.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# Readeck instance
read.{$FQDN} {
    import acme
    route /api* {
        crowdsec
        import websockets localhost:50000
    }
    route {
        crowdsec
        appsec
        # This is to get rid of the annoying csp-report dev console spam that seems to cause my browser to eventually collapse upon itself
        header >Content-Security-Policy "frame-ancestors 'self' data: https://*.rubberverse.xyz https://challenges.cloudflare.com; frame-src 'self' https://read.rubberverse.xyz https://challenges.cloudflare.com; style-src 'self' https://read.rubberverse.xyz; style-src-elem 'self' https://read.rubberverse.xyz; upgrade-insecure-requests;"
        header >Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        header Access-Origin-Opener-Policy "same-origin-allow-popups"
        header Cross-Origin-Resource-Policy "cross-origin"
        import failed_login readeck /login localhost:50000
    }
    log {
        output file /app/logs/readeck.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# ArTalk comments
comments.{$FQDN} {
    import acme
    #import compress
    # Custom CSP header and COOP, CORP
    route {
        crowdsec
        appsec
        reverse_proxy localhost:9006 {
            header_up >Content-Security-Policy "frame-ancestors 'self' data: https://*.rubberverse.xyz https://challenges.cloudflare.com; frame-src 'self' https://comments.rubberverse.xyz https://challenges.cloudflare.com; script-src 'self' https://comments.rubberverse.xyz https://analytics.rubberverse.xyz https://challenges.cloudflare.com https://cdn.jsdelivr.net"
            header_up >Cross-Origin-Opener-Policy "same-origin-allow-popups"
            header_up >Cross-Origin-Resource-Policy "cross-origin"
        }
    }
    log {
        output file /app/logs/comments.log {
            mode 644
            roll_size 20M
            roll_uncompressed
            roll_keep_for 3d
        }
    }
}

# Sharkey instace
social.{$FQDN} {
    import acme
    route {
        crowdsec
        import websockets localhost:3001
        import umami https://analytics.rubberverse.xyz/api/send meow
        # Need to do a lot of things manually for Sharkey as it sets some headers by itself and makes extensive use of websockets
        handle {
            reverse_proxy localhost:3001
            @sharkeyCache {
                path *.ico *.svg *.gif *.jpg *.jpeg *.webp *.avif *.woff *.woff2 *.png
            }
            # Caching for files
            header @sharkeyCache >Cache-Control "public, max-age=31536000, immutable"
            # Host Header, needed for proper reverse proxy functionality
            header >Host {http.reverse_proxy.upstream.hostport}
            # Client IP Header, we are deferring it and overwriting client's value. Ensures proper rate limiting.
            header >X-Forwarded-For {Client_ip}
            # HSTS Header, default one has max age of like few hours.
            header >Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
            # X-* headers
            header >X-Content-Type-Options "nosniff"
            header >X-XSS-Protection "1; mode=block"
            # Header for crawlers
            header >X-Robots-Tag "noimageindex; nofollow"
        }
    }
    log {
        output discard
    }
}
